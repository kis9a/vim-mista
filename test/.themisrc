
let s:root = expand('<sfile>:h:h')
execute 'set runtimepath+=' . s:root


runtime plugin/mista.vim

set nocompatible
filetype plugin on
syntax on

function! g:Create_test_markdown_buffer() abort
  new
  setlocal buftype=nofile
  setlocal filetype=markdown
  call setline(1, [
    \ '# Test Document',
    \ '',
    \ '## Section One',
    \ 'This is content in section one.',
    \ 'It has multiple lines.',
    \ '',
    \ '### Subsection 1.1',
    \ 'Content for subsection 1.1',
    \ '',
    \ '## Section Two',
    \ 'This is content in section two.',
    \ 'Testing content here.',
    \ '',
    \ '### Subsection 2.1',
    \ 'More test content.',
    \ '',
    \ '#### Deep Section',
    \ 'Very deep content.',
    \ '',
    \ '## Section Three',
    \ 'Final section content.',
    \ ])
  return bufnr('%')
endfunction

function! g:Get_mista_buffer() abort
  for buf in range(1, bufnr('$'))
    if bufexists(buf) && getbufvar(buf, 'mista_buffer', 0)
      return buf
    endif
  endfor
  return -1
endfunction

function! g:Count_mista_matches() abort
  if !exists('b:mista_matches')
    return 0
  endif
  return len(b:mista_matches)
endfunction